{
	"info": {
		"_postman_id": "a10b632c-1af3-4c70-b5a0-88013ab3a3fd",
		"name": "Api_TestCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2374598"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "1.0 Get",
					"item": [
						{
							"name": "1.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/api/Users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Users"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Users"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 Get all users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Has > 0 results\", function () {\r",
											"    pm.expect(data.length).to.be.above(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Users",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Users"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Albums",
			"item": [
				{
					"name": "1.0 Get",
					"item": [
						{
							"name": "1.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/api/Albums",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Albums"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Albums",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Albums"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 Get all albums",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Has > 0 results\", function () {\r",
											"    pm.expect(data.length).to.be.above(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Albums",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Albums"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "1.0 Get",
					"item": [
						{
							"name": "1.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 Get all posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Has > 0 results\", function () {\r",
											"    pm.expect(data.length).to.be.above(0);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"postIdForDetail\", data[0].Id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.4 Get post detail by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Has > 0 results\", function () {\r",
											"    pm.expect(data.Id).to.equal(pm.collectionVariables.get(\"postIdForDetail\"));  \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Posts/{{postIdForDetail}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts",
										"{{postIdForDetail}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2.0 Post",
					"item": [
						{
							"name": "2.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": {{createPostUserId}},\r\n    \"Title\": \"{{createPostTitle}}\",\r\n    \"Body\": \"{{createPostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": {{createPostUserId}},\r\n    \"Title\": \"{{createPostTitle}}\",\r\n    \"Body\": \"{{createPostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.3 Create post with invalid user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"User not found error\", function () {\r",
											"    pm.expect(data.Message).to.equal(\"User not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": {{createPostInvalidUserId}},\r\n    \"Title\": \"{{createPostTitle}}\",\r\n    \"Body\": \"{{createPostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.4 Create post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": {{createPostUserId}},\r\n    \"Title\": \"{{createPostTitle}}\",\r\n    \"Body\": \"{{createPostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3.0 Put",
					"item": [
						{
							"name": "3.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Id\": {{updatePostPostId}},\r\n    \"UserId\": {{updatePostUserId}},\r\n    \"Title\": \"{{updatePostTitle}}\",\r\n    \"Body\": \"{{updatePostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Id\": {{updatePostPostId}},\r\n    \"UserId\": {{updatePostUserId}},\r\n    \"Title\": \"{{updatePostTitle}}\",\r\n    \"Body\": \"{{updatePostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.3 Update post with invalid post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Post not found error\", function () {\r",
											"    pm.expect(data.Message).to.equal(\"Post not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Id\": {{updatePostInvalidPostId}},\r\n    \"UserId\": {{updatePostUserId}},\r\n    \"Title\": \"{{updatePostTitle}}\",\r\n    \"Body\": \"{{updatePostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.4 Update post with invalid user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"User not found error\", function () {\r",
											"    pm.expect(data.Message).to.equal(\"User not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Id\": {{updatePostPostId}},\r\n    \"UserId\": {{updatePostInvalidUserId}},\r\n    \"Title\": \"{{updatePostTitle}}\",\r\n    \"Body\": \"{{updatePostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.5 Update post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 204\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Id\": {{updatePostPostId}},\r\n    \"UserId\": {{updatePostUserId}},\r\n    \"Title\": \"{{updatePostTitle}}\",\r\n    \"Body\": \"{{updatePostBody}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiUrl}}/api/Posts",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4.0 Delete",
					"item": [
						{
							"name": "3.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/api/Posts/{{deletePostPostId}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts",
										"{{deletePostPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Posts/{{deletePostPostId}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts",
										"{{deletePostPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.3 Update post with invalid post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(400);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Post not found error\", function () {\r",
											"    pm.expect(data.Message).to.equal(\"Post not found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Posts/{{deletePostInvalidPostId}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts",
										"{{deletePostInvalidPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3.5 Update post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 204\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Posts/{{deletePostPostId}}",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Posts",
										"{{deletePostPostId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Collection",
			"item": [
				{
					"name": "1.0 Get",
					"item": [
						{
							"name": "1.1 TEST CASE: no Authorization header",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}/api/Collection",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 TEST CASE: invalid Authorization header value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 501\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(501);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer 123",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Collection",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Collection"
									]
								}
							},
							"response": []
						},
						{
							"name": "1.3 Get collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"var data = pm.response.json();\r",
											"\r",
											"pm.test(\"Has > 0 results\", function () {\r",
											"    pm.expect(data.length).to.be.above(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer af24353tdsfw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}/api/Collection",
									"host": [
										"{{apiUrl}}"
									],
									"path": [
										"api",
										"Collection"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiUrl",
			"value": "https://localhost:44398"
		},
		{
			"key": "postIdForDetail",
			"value": "",
			"type": "string"
		},
		{
			"key": "createPostTitle",
			"value": "test title",
			"type": "string"
		},
		{
			"key": "createPostBody",
			"value": "test body",
			"type": "string"
		},
		{
			"key": "createPostUserId",
			"value": "2",
			"type": "string"
		},
		{
			"key": "createPostInvalidUserId",
			"value": "1000",
			"type": "string"
		},
		{
			"key": "updatePostUserId",
			"value": "4",
			"type": "string"
		},
		{
			"key": "updatePostInvalidUserId",
			"value": "1099",
			"type": "string"
		},
		{
			"key": "updatePostPostId",
			"value": "101",
			"type": "string"
		},
		{
			"key": "updatePostInvalidPostId",
			"value": "1089",
			"type": "string"
		},
		{
			"key": "updatePostTitle",
			"value": "update test title",
			"type": "string"
		},
		{
			"key": "updatePostBody",
			"value": "update test body",
			"type": "string"
		},
		{
			"key": "deletePostPostId",
			"value": "101",
			"type": "string"
		},
		{
			"key": "deletePostInvalidPostId",
			"value": "10009",
			"type": "string"
		}
	]
}